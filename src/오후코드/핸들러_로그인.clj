(ns 오후코드.핸들러-로그인
  (:require [compojure.core :refer :all]
            [미생.기본 :refer :all]
            [오후코드.db :as db]
            [오후코드.기본 :refer :all]
            [오후코드.보안 :as 보안]
            [오후코드.핸들러-유틸 :refer :all]))

(정의 로그인쿠키명 "ohucode-login")

(함수 손님거부-미들웨어
  "로그인한 세션만 핸들러를 처리하고, 그렇지 않으면 에러응답."
  [핸들러]
  (fn [요청]
    (만약 (로그인? 요청)
      (핸들러 요청)
      (기본응답 401 "로그인이 필요합니다."))))

(가정 [유통기한 (* 7 24 3600)]
  (정의 ^:private 로그인쿠키-기본값
    {:value ""
     :path "/"
     :max-age 유통기한
     :secure false ;; HTTPS 연결후 true로 바꾸자
     :http-only true})

  (함수- 로그인쿠키-만들기 [아이디]
    (assoc 로그인쿠키-기본값
           :value (보안/인증토큰생성
                   {:아이디   아이디
                    :발급일시 (지금시각)
                    :만료일시 (+ (지금시각) 유통기한)}))))

(함수- 로그인쿠키-삭제 [응답]
  (assoc-in 응답 [:cookies 로그인쿠키명]
            (assoc 로그인쿠키-기본값 :max-age 0)))

(함수- 로그인쿠키 [요청or응답]
  (get-in 요청or응답 [:cookies 로그인쿠키명]))

(함수- 로그인요청 [요청 이용자]
  (-> 요청
      (assoc-in [:session :이용자] 이용자)))

(함수- 로그인응답 [응답 이용자]
  (-> 응답
      (assoc-in [:session :이용자] 이용자)
      (assoc-in [:cookies 로그인쿠키명] (로그인쿠키-만들기 (:아이디 이용자)))))

(함수- 로그아웃응답 [응답]
  (-> 응답
      로그인쿠키-삭제
      (update :session dissoc :이용자)))

(함수- 손님전용-미들웨어
  "로그인하지 않은 세션의 경우에만 미들웨어를 끼운다.
   로그인한 세션은 미들웨어 거치지 않고 바로 핸들러 처리한다."
  [핸들러 미들웨어]
  (가정 [미들웨어-낀-핸들러 (미들웨어 핸들러)]
    (fn [요청]
      ((if (로그인? 요청) 핸들러 미들웨어-낀-핸들러) 요청))))

(함수- 로그인쿠키-삭제-미들웨어 [핸들러]
  (fn [요청]
    (만약-가정 [응답 (핸들러 요청)]
      (만약 (and (로그인쿠키 요청) (not (로그인쿠키 응답)))
        ;; 요청에 있는데 응답에 없으면 삭제
        (로그인쿠키-삭제 응답)
        응답))))

(함수- 로그인-미들웨어 [핸들러 이용자]
  (fn [요청]
    (만약-가정 [응답 (핸들러 (로그인요청 요청 이용자))]
      (로그인응답 응답 이용자))))

(함수- 로그인쿠키처리-미들웨어
  "인증쿠키를 확인해서 유효하면, 요청에 :인증 정보를 포함시키고,
  무효하면, 인증쿠키를 삭제한다. 이미 인증된 세션의 경우 아무런
  처리도 하지 않는다.
  중요: 쿠키/세션 미들웨어보다 안쪽에 등록해야한다."
  [핸들러]
  (가정 [로그인쿠키-삭제-핸들러 (로그인쿠키-삭제-미들웨어 핸들러)
         없는이용자처리 로그인쿠키-삭제-핸들러
         무효쿠키처리 로그인쿠키-삭제-핸들러]
    (fn [요청]
      (가정 [인증정보 (-> (로그인쿠키 요청) :value 보안/인증토큰확인)]
        (만약 (and 인증정보
                   (< (지금시각) (get 인증정보 :만료일시 0)))
          (만약-가정 [이용자 (db/이용자-열람 (:아이디 인증정보))]
            ((로그인-미들웨어 핸들러 이용자) 요청)
            (없는이용자처리 요청))
          (무효쿠키처리 요청))))))

(함수 자동로그인-미들웨어
  [핸들러]
  (손님전용-미들웨어 핸들러 로그인쿠키처리-미들웨어))

(정의 로그인-라우트
  (context "/user" []
    (POST "/login" [아이디 비밀번호]
      (만약 (db/유효-비밀번호? 아이디 비밀번호)
        (가정 [이용자 (db/이용자-열람 아이디)]
          (-> (기본응답 {:이용자 이용자})
              (로그인응답 이용자)))
        (기본응답 401 {:실패 "인증 실패"})))
    (PUT "/logout" 요청
      (db/기록-남기기 (get (세션이용자 요청) :아이디 "손님")
                      "로그아웃" {})
      (-> (기본응답 {:성공 "로그아웃 처리"})
          로그아웃응답))))
